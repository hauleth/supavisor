name: PGBench benchmarks
on:
  pull_request:
    branches:
      - main
env:
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
jobs:
  format:
    name: Formatting Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: 25.x # Define the OTP version [required]
          elixir-version: 1.14.x # Define the elixir version [required]
      - name: Cache Mix
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get
      - name: Set up Postgres
        run: docker-compose -f ./docker-compose.db.yml up -d
      - name: Run main database migrations
        run: mix ecto.migrate --prefix _supavisor --log-migrator-sql
      - name: Run PGBench
        uses: BerniWittmann/background-server-action@v1
        with:
          command: |
            curl -X PUT 'http://localhost:4000/api/tenants/dev_tenant' --header 'Accept: application/json'  --header 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNjQ1MTkyODI0LCJleHAiOjE5NjA3Njg4MjR9.M9jrxyvPLkUxWgOYSf5dNdJ8v_eRrq810ShFRT8N-6M' --header 'Content-Type: application/json' --data-raw '{"tenant":{"db_host":"localhost","db_port":6432,"db_database":"postgres","users":[{"db_user":"postgres","db_password":"postgres","pool_size":"20"}]}}' && PGPASSWORD=postgres pgbench -M extended --transactions 100 --jobs 10 --client 100 -h localhost -p 7654 -U postgres.localhost postgres
          start: make dev
